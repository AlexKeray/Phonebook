USE PHONEBOOK
GO

DECLARE @VAR_UCN NVARCHAR(32);
DECLARE @VAR_NEW_UCN NVARCHAR(32);
DECLARE @VAR_FIRST_NAME NVARCHAR(64);
DECLARE @VAR_MIDDLE_NAME NVARCHAR(64);
DECLARE @VAR_LAST_NAME NVARCHAR(64);
DECLARE @VAR_NEW_CITY_NAME NVARCHAR(64);
DECLARE @VAR_NEW_AREA NVARCHAR(64);
DECLARE @VAR_NEW_ADDRESS NVARCHAR(512);

SET @VAR_UCN =N'0645166058';
SET @VAR_NEW_UCN =N'0645166058';
SET @VAR_FIRST_NAME = N'Виктория';
SET @VAR_MIDDLE_NAME = N'Стоянова';
SET @VAR_LAST_NAME = N'Иванова';
SET @VAR_NEW_CITY_NAME = N'София';
SET @VAR_NEW_AREA = N'София град';
SET @VAR_NEW_ADDRESS = N'Ул 219 Бл 14';

IF NOT EXISTS (
	SELECT *
	FROM PERSONS
	WHERE UCN = @VAR_UCN
)
PRINT N'UCN not found'

IF EXISTS (
	SELECT *
	FROM PERSONS
	WHERE UCN = @VAR_NEW_UCN
)
PRINT N'New UCN is not unique'

IF (
	NOT EXISTS (
	SELECT *
	FROM CITIES
	WHERE CITY_NAME = @VAR_NEW_CITY_NAME
	)
	OR NOT EXISTS (
	SELECT *
	FROM CITIES
	WHERE AREA = @VAR_NEW_AREA
	)
)
PRINT N'City names are invalid'

BEGIN TRY
BEGIN TRANSACTION

UPDATE PERSONS
SET FIRST_NAME = @VAR_FIRST_NAME
FROM PERSONS
WHERE UCN = @VAR_UCN

UPDATE PERSONS
SET MIDDLE_NAME = @VAR_MIDDLE_NAME
FROM PERSONS
WHERE UCN = @VAR_UCN

UPDATE PERSONS
SET LAST_NAME = @VAR_LAST_NAME
FROM PERSONS
WHERE UCN = @VAR_UCN

UPDATE PERSONS
SET PERSON_ADDRESS = @VAR_NEW_ADDRESS
FROM PERSONS
WHERE UCN = @VAR_UCN

UPDATE PERSONS
SET UCN = @VAR_NEW_UCN
FROM PERSONS
WHERE UCN = @VAR_UCN

UPDATE PERSONS
SET CITY_ID = (
	SELECT ID
	FROM CITIES 
	WHERE CITY_NAME = @VAR_NEW_CITY_NAME
		AND AREA = @VAR_NEW_AREA
	)
FROM PERSONS
WHERE UCN = @VAR_UCN

	COMMIT TRANSACTION
END TRY
BEGIN CATCH
	PRINT ERROR_MESSAGE()
	ROLLBACK TRANSACTION
END CATCH
GO